// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`default export > file > Should minify files as expected 1`] = `"const person={name:\`Alice\`,age:30};type PersonType=typeof person;type Animal={name:string;};(({name:\`Buddy\`,breed:\`Golden Retriever\`}) satisfies Animal);function identity<e extends number|string = string>(u:e): e{return u}identity(),identity(42);interface HasLength{length:number;}function logLength<e extends HasLength = string>(u:e): void{console.log(u.length)}logLength(\`Hello\`),logLength([1,2,3]);function add(e:number,u:number): number{return e+u}type AddFunctionType=typeof add;interface Box<e extends object = {message:string;}>{content:e;}type Task={title:string;description?:string;completed:boolean;};(({title:\`Learn TypeScript\`,completed:!1,priority:\`High\`}) satisfies Task);function wrapInArray<e = string>(u:e): e[]{return[u]}wrapInArray(),wrapInArray(42);"`;

exports[`default export > file > Should works well when option verbose set 1`] = `"const person={name:\`Alice\`,age:30};type PersonType=typeof person;type Animal={name:string;};(({name:\`Buddy\`,breed:\`Golden Retriever\`}) satisfies Animal);function identity<e extends number|string = string>(u:e): e{return u}identity(),identity(42);interface HasLength{length:number;}function logLength<e extends HasLength = string>(u:e): void{console.log(u.length)}logLength(\`Hello\`),logLength([1,2,3]);function add(e:number,u:number): number{return e+u}type AddFunctionType=typeof add;interface Box<e extends object = {message:string;}>{content:e;}type Task={title:string;description?:string;completed:boolean;};(({title:\`Learn TypeScript\`,completed:!1,priority:\`High\`}) satisfies Task);function wrapInArray<e = string>(u:e): e[]{return[u]}wrapInArray(),wrapInArray(42);"`;

exports[`default export > stream > Should minify files 1`] = `"const person={name:\`Alice\`,age:30};type PersonType=typeof person;type Animal={name:string;};(({name:\`Buddy\`,breed:\`Golden Retriever\`}) satisfies Animal);function identity<e extends number|string = string>(u:e): e{return u}identity(),identity(42);interface HasLength{length:number;}function logLength<e extends HasLength = string>(u:e): void{console.log(u.length)}logLength(\`Hello\`),logLength([1,2,3]);function add(e:number,u:number): number{return e+u}type AddFunctionType=typeof add;interface Box<e extends object = {message:string;}>{content:e;}type Task={title:string;description?:string;completed:boolean;};(({title:\`Learn TypeScript\`,completed:!1,priority:\`High\`}) satisfies Task);function wrapInArray<e = string>(u:e): e[]{return[u]}wrapInArray(),wrapInArray(42);"`;

exports[`named export > file > Should minify files as expected 1`] = `"const person={name:\`Alice\`,age:30};type PersonType=typeof person;type Animal={name:string;};(({name:\`Buddy\`,breed:\`Golden Retriever\`}) satisfies Animal);function identity<e extends number|string = string>(u:e): e{return u}identity(),identity(42);interface HasLength{length:number;}function logLength<e extends HasLength = string>(u:e): void{console.log(u.length)}logLength(\`Hello\`),logLength([1,2,3]);function add(e:number,u:number): number{return e+u}type AddFunctionType=typeof add;interface Box<e extends object = {message:string;}>{content:e;}type Task={title:string;description?:string;completed:boolean;};(({title:\`Learn TypeScript\`,completed:!1,priority:\`High\`}) satisfies Task);function wrapInArray<e = string>(u:e): e[]{return[u]}wrapInArray(),wrapInArray(42);"`;

exports[`named export > file > Should works well when option verbose set 1`] = `"const person={name:\`Alice\`,age:30};type PersonType=typeof person;type Animal={name:string;};(({name:\`Buddy\`,breed:\`Golden Retriever\`}) satisfies Animal);function identity<e extends number|string = string>(u:e): e{return u}identity(),identity(42);interface HasLength{length:number;}function logLength<e extends HasLength = string>(u:e): void{console.log(u.length)}logLength(\`Hello\`),logLength([1,2,3]);function add(e:number,u:number): number{return e+u}type AddFunctionType=typeof add;interface Box<e extends object = {message:string;}>{content:e;}type Task={title:string;description?:string;completed:boolean;};(({title:\`Learn TypeScript\`,completed:!1,priority:\`High\`}) satisfies Task);function wrapInArray<e = string>(u:e): e[]{return[u]}wrapInArray(),wrapInArray(42);"`;

exports[`named export > stream > Should minify files 1`] = `"const person={name:\`Alice\`,age:30};type PersonType=typeof person;type Animal={name:string;};(({name:\`Buddy\`,breed:\`Golden Retriever\`}) satisfies Animal);function identity<e extends number|string = string>(u:e): e{return u}identity(),identity(42);interface HasLength{length:number;}function logLength<e extends HasLength = string>(u:e): void{console.log(u.length)}logLength(\`Hello\`),logLength([1,2,3]);function add(e:number,u:number): number{return e+u}type AddFunctionType=typeof add;interface Box<e extends object = {message:string;}>{content:e;}type Task={title:string;description?:string;completed:boolean;};(({title:\`Learn TypeScript\`,completed:!1,priority:\`High\`}) satisfies Task);function wrapInArray<e = string>(u:e): e[]{return[u]}wrapInArray(),wrapInArray(42);"`;
